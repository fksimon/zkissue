version: '2.4'

x-zookeeper:
  &zookeeper-env
  JVMFLAGS: -Dzookeeper.4lw.commands.whitelist=ruok
  ZOO_ADMINSERVER_ENABLED: 'true'
  ZOO_STANDALONE_ENABLED: 'false'
  ZOO_SERVERS: server.1=zookeeper1:2888:3888;2181 server.2=zookeeper2:2888:3888;2181 server.3=zookeeper3:2888:3888;2181

x-server:
  &server-env
  ZOOKEEPER_CONNECTION: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
  BASE_PATH: /myservices
  SERVICE_NAME: test

services:
  zookeeper1:
    image: artifactory.rd2.thingworx.io/zookeeper:3.6.3
    restart: always
    ports:
      - 2181:2181
      - 8090:8080
    healthcheck:
      test: echo ruok | nc localhost 2181 | grep imok
      interval: 15s
    environment:
      <<: *zookeeper-env
      ZOO_MY_ID: 1

  zookeeper2:
    image: artifactory.rd2.thingworx.io/zookeeper:3.6.3
    restart: always
    ports:
      - 2182:2181
      - 8091:8080
    healthcheck:
      test: echo ruok | nc localhost 2181 | grep imok
      interval: 15s
    environment:
      <<: *zookeeper-env
      ZOO_MY_ID: 2

  zookeeper3:
    image: artifactory.rd2.thingworx.io/zookeeper:3.6.3
    restart: always
    ports:
      - 2183:2181
      - 8092:8080
    healthcheck:
      test: echo ruok | nc localhost 2181 | grep imok
      interval: 15s
    environment:
      <<: *zookeeper-env
      ZOO_MY_ID: 3

  server1:
    image: curator-test:0.0.2
    environment:
      <<: *server-env
      SERVER: 1

  server2:
    image: curator-test:0.0.2
    environment:
      <<: *server-env
      SERVER: 2

  server3:
    image: curator-test:0.0.2
    environment:
      <<: *server-env
      SERVER: 3

  server4:
    image: curator-test:0.0.2
    environment:
      <<: *server-env
      SERVER: 4

  server5:
    image: curator-test:0.0.2
    environment:
      <<: *server-env
      SERVER: 5
